version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: DockerFile.flask
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgresql/postgres
      TZ: Asia/Tokyo
    volumes:
      - ./app/front/out:/app/front/out
      - ./app/back/main.py:/app/back/main.py

  postgresql:
    build:
      context: .
      dockerfile: DockerFile.pgvector
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      TZ: Asia/Tokyo
    volumes:
      - volume_postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  nginx:
    image: nginx:1.27.2
    ports:
      - "80:80"
    environment:
      TZ: Asia/Tokyo
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - flask

  service_pgadmin:
    image: dpage/pgadmin4:8.13.0
    container_name: container_pgadmin
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: example@example.com
      PGADMIN_DEFAULT_PASSWORD: password
      TZ: Asia/Tokyo
    volumes:
      - volume_pgadmin:/var/lib/pgadmin
    depends_on:
      - postgresql


volumes:
  volume_postgres:
    name: vpg
  volume_pgadmin:
    name: vpga
